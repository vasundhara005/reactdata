{"version":3,"sources":["component/education.js","component/skills.js","component/resume.js","App.js","serviceWorker.js","index.js"],"names":["Education","col","this","props","yearofpassing","style","marginTop","schoolName","description","Component","Skills","display","skill","Resume","textAlign","src","alt","height","paddingTop","color","borderTop","width","className","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+MAmBeA,E,uKAdb,OACC,kBAAC,OAAD,KACE,kBAAC,OAAD,CAAMC,IAAK,GAEA,2BAAIC,KAAKC,MAAMC,gBAE1B,kBAAC,OAAD,CAAMH,IAAK,GACP,wBAAII,MAAO,CAACC,UAAW,QAASJ,KAAKC,MAAMI,YAC3C,4BAAKL,KAAKC,MAAMK,mB,GAVDC,aCYTC,E,uKAVb,OACC,kBAAC,OAAD,KACE,kBAAC,OAAD,CAAMT,IAAK,IACA,yBAAKI,MAAO,CAACM,QAAQ,SAAS,4BAAKT,KAAKC,MAAMS,c,GALzCH,aC4ENI,E,uKAxEb,OACC,6BACI,kBAAC,OAAD,KACI,kBAAC,OAAD,CAAMZ,IAAK,GACP,yBAAKI,MAAO,CAAES,UAAU,WACrB,yBACEC,IAAI,oEACJC,IAAI,UACJX,MAAO,CAACY,OAAO,YAIpB,wBAAIZ,MAAO,CAAEa,WAAW,QAAxB,UACA,wBAAIb,MAAO,CAAEc,MAAO,SAApB,YACA,wBAAId,MAAO,CAACe,UAAW,oBAAsBC,MAAM,SACnD,4CACA,yCACA,qCACA,wDACA,wBAAIhB,MAAO,CAACe,UAAW,oBAAsBC,MAAM,SACnD,uCACA,mFAGJ,kBAAC,OAAD,CAAMC,UAAU,mBAAmBrB,IAAK,GACpC,yCACA,+DAGA,kBAAC,EAAD,CACAG,cAAe,KACfG,WAAW,uCACXC,YAAY,WAEZ,kBAAC,EAAD,CACAJ,cAAe,KACfG,WAAW,2BACXC,YAAY,iBAEZ,kBAAC,EAAD,CACAJ,cAAe,KACfG,WAAW,yBACXC,YAAY,QAEZ,wBAAIH,MAAO,CAACe,UAAW,uBACvB,uCACA,kBAAC,EAAD,CACAR,MAAM,WAEN,kBAAC,EAAD,CACAA,MAAM,MAGN,kBAAC,EAAD,CACAA,MAAM,sB,GAzDAH,a,uBCiBNc,E,uKAdX,OACE,yBAAKD,UAAU,OACb,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,IAAIC,UAAWb,U,GALvBJ,aCOEkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,aCTNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.26294fdd.chunk.js","sourcesContent":["import React ,{ Component } from 'react';\r\nimport { Grid, Cell } from 'react-mdl';\r\n\r\nclass Education extends Component {\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<Grid>\r\n\t\t\t  <Cell col={3}>\r\n                \r\n                <p>{this.props.yearofpassing}</p>\r\n\t\t\t  </Cell>\r\n\t\t\t  <Cell col={9}>\r\n\t\t\t      <h3 style={{marginTop: '0px'}}>{this.props.schoolName}</h3>\r\n\t\t\t      <h5>{this.props.description}</h5>\r\n\t\t\t  </Cell>\r\n\t\t\t</Grid>\r\n\t\t\t)\r\n\t}\r\n}\r\nexport default Education;","import React, { Component } from 'react';\r\nimport { Grid, Cell } from 'react-mdl';\r\n\r\nclass Skills extends Component {\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<Grid>\r\n\t\t\t  <Cell col={12}>\r\n                <div style={{display:\"flex\"}}><h4>{this.props.skill}</h4></div>\r\n                \r\n\t\t\t  </Cell>\r\n\t\t\t</Grid>\r\n\t\t\t)\r\n\t}\r\n}\r\nexport default Skills;","import React ,{ Component } from 'react';\r\nimport { Grid, Cell } from 'react-mdl';\r\nimport Education from './education';\r\nimport Skills from './skills';\r\nclass Resume extends Component {\r\n\trender(){\r\n\t\t\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t    <Grid>\r\n\t\t\t        <Cell col={4}>\r\n\t\t\t            <div style={{ textAlign:'center' }}>\r\n\t\t\t               <img \r\n\t\t\t                 src=\"https://d2gg9evh47fn9z.cloudfront.net/800px_COLOURBOX11814709.jpg\"\r\n\t\t\t                 alt=\"profile\"\r\n\t\t\t                 style={{height:'200px'}}\r\n\r\n\t\t\t               />\r\n\t\t\t            </div>\r\n\t\t\t            <h2 style={{ paddingTop:'2em'}}> vinay</h2>\r\n\t\t\t            <h4 style={{ color: 'grey'}}> student</h4>\r\n\t\t\t            <hr style={{borderTop: '3px solid #833fb2' , width:'50%'}}/>\r\n\t\t\t            <h5>Roll number </h5>\r\n\t\t\t            <p>17B81A04E1</p>\r\n\t\t\t            <h5>Email</h5>\r\n\t\t\t            <p>vasundhrasiriki@gmail.com</p>\r\n\t\t\t            <hr style={{borderTop: '3px solid #833fb2' , width:'50%'}}/>\r\n\t\t\t            <h5>Address</h5>\r\n\t\t\t            <p>20-125,velam pet colony ,kaikaluru,krishna district</p>\r\n\r\n\t\t\t        </Cell>\r\n\t\t\t        <Cell className=\"resume-right-col\" col={8}>\r\n\t\t\t            <h2>Education</h2>\r\n\t\t\t            <h3>year of passing       Institute</h3>\r\n\r\n\r\n\t\t\t            <Education\r\n\t\t\t            yearofpassing={2021}\r\n\t\t\t            schoolName=\"sir c r reddy college of engineering\"\r\n\t\t\t            description=\"b.tech\"\r\n\t\t\t            />\r\n\t\t\t            <Education\r\n\t\t\t            yearofpassing={2017}\r\n\t\t\t            schoolName=\"sri chaitanya jr college\"\r\n\t\t\t            description=\"intermediate\"\r\n\t\t\t            />\r\n\t\t\t            <Education\r\n\t\t\t            yearofpassing={2015}\r\n\t\t\t            schoolName=\"gandhinagar mch school\"\r\n\t\t\t            description=\"ssc\"\r\n\t\t\t            />\r\n\t\t\t            <hr style={{borderTop: '3px solid #e22947'}}/>\r\n\t\t\t            <h2>skills </h2>\r\n\t\t\t            <Skills\r\n\t\t\t            skill=\"python\" \r\n\t\t\t            />\r\n\t\t\t            <Skills\r\n\t\t\t            skill=\"c\" \r\n\r\n\t\t\t            />\r\n\t\t\t            <Skills\r\n\t\t\t            skill=\"web design\" \r\n\r\n\t\t\t            />\r\n\t\t\t            \r\n\t\t\t             \r\n\r\n\r\n\r\n\r\n\r\n\t\t\t        </Cell>\r\n\r\n\t\t\t</Grid>\r\n\r\n\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\nexport default Resume; ","import React , { Component } from 'react';\nimport Resume from './component/resume';\nimport './App.css';\nimport {BrowserRouter , Route} from 'react-router-dom';\n\nclass App extends Component {\n  render(){\n    return(\n      <div className=\"App\">\n        <BrowserRouter>\n        <Route exact path=\"/\" component={Resume}/>\n\n        </BrowserRouter>\n        \n      </div>\n      )\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}